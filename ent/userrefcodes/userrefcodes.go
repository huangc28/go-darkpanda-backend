// Code generated by entc, DO NOT EDIT.

package userrefcodes

import (
	"fmt"
)

const (
	// Label holds the string label denoting the userrefcodes type in the database.
	Label = "user_ref_codes"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRefCode holds the string denoting the ref_code field in the database.
	FieldRefCode = "ref_code"
	// FieldRefCodeType holds the string denoting the ref_code_type field in the database.
	FieldRefCodeType = "ref_code_type"

	// EdgeUsers holds the string denoting the users edge name in mutations.
	EdgeUsers = "users"
	// EdgeRefcodeInvitee holds the string denoting the refcode_invitee edge name in mutations.
	EdgeRefcodeInvitee = "refcode_invitee"

	// Table holds the table name of the userrefcodes in the database.
	Table = "user_ref_codes"
	// UsersTable is the table the holds the users relation/edge.
	UsersTable = "user_ref_codes"
	// UsersInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UsersInverseTable = "users"
	// UsersColumn is the table column denoting the users relation/edge.
	UsersColumn = "invitor_id"
	// RefcodeInviteeTable is the table the holds the refcode_invitee relation/edge.
	RefcodeInviteeTable = "user_ref_codes"
	// RefcodeInviteeInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	RefcodeInviteeInverseTable = "users"
	// RefcodeInviteeColumn is the table column denoting the refcode_invitee relation/edge.
	RefcodeInviteeColumn = "invitee_id"
)

// Columns holds all SQL columns for userrefcodes fields.
var Columns = []string{
	FieldID,
	FieldRefCode,
	FieldRefCodeType,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the UserRefCodes type.
var ForeignKeys = []string{
	"invitor_id",
	"invitee_id",
}

// RefCodeType defines the type for the ref_code_type enum field.
type RefCodeType string

// RefCodeType values.
const (
	RefCodeTypeInvitor RefCodeType = "invitor"
	RefCodeTypeManager RefCodeType = "manager"
)

func (rct RefCodeType) String() string {
	return string(rct)
}

// RefCodeTypeValidator is a validator for the "ref_code_type" field enum values. It is called by the builders before save.
func RefCodeTypeValidator(rct RefCodeType) error {
	switch rct {
	case RefCodeTypeInvitor, RefCodeTypeManager:
		return nil
	default:
		return fmt.Errorf("userrefcodes: invalid enum value for ref_code_type field: %q", rct)
	}
}
