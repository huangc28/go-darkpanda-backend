// Code generated by sqlc. DO NOT EDIT.
// source: refcodes.sql

package models

import (
	"context"
	"database/sql"
)

const createRefcode = `-- name: CreateRefcode :one
INSERT INTO user_refcodes (
	invitor_id,
	invitee_id,
	ref_code,
	ref_code_type
) VALUES (
	$1,
	$2,
	$3,
	$4
)
RETURNING id, invitor_id, invitee_id, ref_code, ref_code_type, created_at, updated_at, deleted_at
`

type CreateRefcodeParams struct {
	InvitorID   int32         `json:"invitor_id"`
	InviteeID   sql.NullInt32 `json:"invitee_id"`
	RefCode     string        `json:"ref_code"`
	RefCodeType RefCodeType   `json:"ref_code_type"`
}

func (q *Queries) CreateRefcode(ctx context.Context, arg CreateRefcodeParams) (UserRefcode, error) {
	row := q.queryRow(ctx, q.createRefcodeStmt, createRefcode,
		arg.InvitorID,
		arg.InviteeID,
		arg.RefCode,
		arg.RefCodeType,
	)
	var i UserRefcode
	err := row.Scan(
		&i.ID,
		&i.InvitorID,
		&i.InviteeID,
		&i.RefCode,
		&i.RefCodeType,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}

const getReferCodeInfoByRefcode = `-- name: GetReferCodeInfoByRefcode :one
SELECT id, invitor_id, invitee_id, ref_code, ref_code_type, created_at, updated_at, deleted_at FROM user_refcodes
WHERE ref_code = $1 LIMIT 1
`

func (q *Queries) GetReferCodeInfoByRefcode(ctx context.Context, refCode string) (UserRefcode, error) {
	row := q.queryRow(ctx, q.getReferCodeInfoByRefcodeStmt, getReferCodeInfoByRefcode, refCode)
	var i UserRefcode
	err := row.Scan(
		&i.ID,
		&i.InvitorID,
		&i.InviteeID,
		&i.RefCode,
		&i.RefCodeType,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}

const updateInviteeIDByRefCode = `-- name: UpdateInviteeIDByRefCode :exec
UPDATE user_refcodes
SET
	invitee_id = $1
WHERE
	ref_code = $2
`

type UpdateInviteeIDByRefCodeParams struct {
	InviteeID sql.NullInt32 `json:"invitee_id"`
	RefCode   string        `json:"ref_code"`
}

func (q *Queries) UpdateInviteeIDByRefCode(ctx context.Context, arg UpdateInviteeIDByRefCodeParams) error {
	_, err := q.exec(ctx, q.updateInviteeIDByRefCodeStmt, updateInviteeIDByRefCode, arg.InviteeID, arg.RefCode)
	return err
}
