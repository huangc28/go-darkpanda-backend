// Code generated by sqlc. DO NOT EDIT.
// source: user.sql

package models

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
	username,
	phone_verified,
	auth_sms_code,
	gender,
	premium_type,
	premium_expiry_date
) VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, username, phone_verified, auth_sms_code, gender, premium_type, premium_expiry_date, created_at, updated_at, deleted_at
`

type CreateUserParams struct {
	Username          string        `json:"username"`
	PhoneVerified     sql.NullBool  `json:"phone_verified"`
	AuthSmsCode       sql.NullInt32 `json:"auth_sms_code"`
	Gender            Gender        `json:"gender"`
	PremiumType       PremiumType   `json:"premium_type"`
	PremiumExpiryDate sql.NullTime  `json:"premium_expiry_date"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.queryRow(ctx, q.createUserStmt, createUser,
		arg.Username,
		arg.PhoneVerified,
		arg.AuthSmsCode,
		arg.Gender,
		arg.PremiumType,
		arg.PremiumExpiryDate,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.PhoneVerified,
		&i.AuthSmsCode,
		&i.Gender,
		&i.PremiumType,
		&i.PremiumExpiryDate,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}

const getAuthor = `-- name: GetAuthor :one
SELECT id, username, phone_verified, auth_sms_code, gender, premium_type, premium_expiry_date, created_at, updated_at, deleted_at FROM users
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetAuthor(ctx context.Context, id int64) (User, error) {
	row := q.queryRow(ctx, q.getAuthorStmt, getAuthor, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.PhoneVerified,
		&i.AuthSmsCode,
		&i.Gender,
		&i.PremiumType,
		&i.PremiumExpiryDate,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}
